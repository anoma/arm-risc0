// These constants represent the RISC-V ELF and the image ID generated by risc0-build.
// The ELF is used for proving and the ID is used for verification.
use arm::{logic_instance::LogicInstance, test_logic::TestLogicWitness};
use logic_test_methods::{LOGIC_TEST_GUEST_ELF, LOGIC_TEST_GUEST_ID};
use risc0_zkvm::{default_prover, ExecutorEnv};
use std::time::Instant;

fn main() {
    let input = TestLogicWitness::default();
    let env = ExecutorEnv::builder()
        .write(&input)
        .unwrap()
        .build()
        .unwrap();

    // Obtain the default prover.
    let prover = default_prover();

    let prove_start_timer = Instant::now();

    // Proof information by proving the specified ELF binary.
    // This struct contains the receipt along with statistics about execution of the guest
    let prove_info = prover.prove(env, LOGIC_TEST_GUEST_ELF).unwrap();

    let prove_duration = prove_start_timer.elapsed();
    println!("Test logic prove duration time: {:?}", prove_duration);

    // extract the receipt.
    let receipt = prove_info.receipt;

    let output: LogicInstance = receipt.journal.decode().unwrap();
    println!("Output: {:?}", output);

    let verify_start_timer = Instant::now();

    // The receipt was verified at the end of proving, but the below code is an
    // example of how someone else could verify this receipt.
    receipt.verify(LOGIC_TEST_GUEST_ID).unwrap();

    let verify_duration = verify_start_timer.elapsed();
    println!("Test logic verify duration time: {:?}", verify_duration);
}
